
require 'fileutils'
require File.join( File.dirname( $0 ), 'common.rb' )



def build_release( config )
    name = config.name

    puts
    puts "Building #{name}"
    puts

    config.targets.each { |target| build_target( config, target ) }

    FileUtils.rm_f [ 'transitions.properties' ]
end

def build_target( config, target )
    puts "  Building for #{target}"

    config.sizes.each { |size| build_instance( config, target, size ) }

    FileUtils.rm_f [ 'script.java' ]
end

def build_instance( config, target, size )
    puts "    Building for screensize #{size}"

    FileUtils.rm_f [ 'release.properties', 'release.log' ]

    name = config.name
    write_release_properties( config, target, size )

    defines = ''
    defines << "-Dwtk.home=#{ENV['WTK_HOME']}" if ENV['WTK_HOME']
    defines << "-Dtoasted=tested" unless ENV['WTK_HOME']
    commandline = "ant #{defines} release >release.log 2>&1"

    success = system( commandline )
    raise "See release.log for error messages!" unless $? == 0
    raise "Please check environment: Failed starting ant!" unless success

    File.open( 'release.log' ) do |file|
        while line = file.gets
            raise "See release.log for error messages!" if line =~ /^BUILD FAILED/
        end
    end

    FileUtils.rm_f [ 'release.properties', 'release.log' ]
end

def write_release_properties( config, target, screen_size )

    config_symbols = nil

    if config.symbols.class == Array
        config_symbols = config.symbols
    else
        config_symbols = config.symbols.split( /\s*,\s*/ )
    end

    symbols = config_symbols + target.symbols
    defined_symbols = list_to_string( symbols, '', ',' )
    jar_suffix = target.name.gsub( /[^\w]/, '_' )

    attributes = config.manifest
    attributes.merge! target.manifest
    manifest_additions = hash_to_string( config.manifest, '=>', ' || ' )

    j2me_path = list_to_string( target.libs, '${dir.intensibuild}/lib/devices/', ';' )

    name = config.name
    output_name = name.gsub( / /, '_' )

    obfuscate = true

    if symbols.index 'DEBUG'
        obfuscate = false
        jar_suffix << '-DEBUG'
    end
    
    File.open( 'release.properties', "w" ) do |file|
        file.puts <<END_OF_DATA
#
# DO NOT EDIT THIS FILE - AUTO GENERATED BY THE BUILD SYSTEM
# WILL BE DELETED AND OVERWRITTEN ON EVERY RELEASE BUILD
#

obfuscate = #{obfuscate}

project.name = #{name}
output.name = #{output_name}
jar_suffix = -#{jar_suffix}-#{screen_size}

screen.size = #{screen_size}

manifest_additions = #{manifest_additions}

defined_symbols = #{defined_symbols}
cldc_version = #{target.cldc}
midp_version = #{target.midp}

j2me_path = #{j2me_path}

target.sound_suffix = #{target.sound_suffix}
target.sound_type = #{target.sound_type}
target.music_suffix = #{target.music_suffix}
target.music_type = #{target.music_type}

target.leftsoft = #{target.keycodes.leftsoft}
target.rightsoft = #{target.keycodes.rightsoft}

target.hiscore_id = [${project.name}:#{config.name}:#{screen_size}]
END_OF_DATA
    end

end
